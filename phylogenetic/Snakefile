"""
This is the main phylogenetic Snakefile that orchestrates the full phylogenetic
workflow and defines its default output(s).
"""
# The workflow filepaths are written relative to this Snakefile's base directory
workdir: workflow.current_basedir

# Use default configuration values. Override with Snakemake's --configfile/--config options.
configfile: "defaults/config.yaml"

builds = ["human", "I", "II", "all"]
genes = ["N", "M", "F", "G", "L", "P"]

wildcard_constraints:
    build="|".join(builds),
    gene="|".join(genes)

rule all:
    input:
        auspice_json = expand("auspice/nipah_{build}.json", build=builds),

# These rules are imported in the order that they are expected to run.
include: "rules/prepare_sequences.smk"
include: "rules/construct_phylogeny.smk"

rule ancestral:
    input:
        tree="builds/{build}/tree.nwk",
        alignment="builds/{build}/premask.fasta",
        annotation=config["ancestral"]["reference_gb"],
    output:
        node_data="builds/{build}/muts.json",
    params:
        inference="joint",
        translations="builds/{build}/translations/gene.%GENE.fasta",
        genes=" ".join(genes),
    shell:
        """
        augur ancestral \
            --tree {input.tree} \
            --alignment {input.alignment} \
            --output-node-data {output.node_data} \
            --inference {params.inference} \
            --genes {params.genes} \
            --annotation {input.annotation} \
            --translations {params.translations} \
            --root-sequence {input.annotation} \
            2>&1 | tee {log}
        """


rule clades:
    input:
        tree="builds/{build}/tree.nwk",
        node_data="builds/{build}/muts.json",
        clades=config["clades"]["clades_defining_mutations"],
    output:
        clades="builds/{build}/clades.json",
    shell:
        """
        augur clades \
            --tree {input.tree} \
            --mutations {input.node_data} \
            --clades {input.clades} \
            --output-node-data {output.clades}
        """


rule export:
    input:
        tree="builds/{build}/tree.nwk",
        node_data="builds/{build}/branch_lengths.json",
        clades="builds/{build}/clades.json",
        ancestral="builds/{build}/muts.json",
        auspice_config=config["export"]["auspice_config"],
        lat_longs=rules.download_lat_longs.output,
        metadata="builds/{build}/metadata.tsv",
    output:
        auspice_json="auspice/nipah_{build}.json",
        root_json="auspice/nipah_{build}_root-sequence.json",
    shell:
        """
        augur export v2 \
            --tree {input.tree} \
            --node-data {input.node_data} {input.ancestral} {input.clades} \
            --include-root-sequence \
            --auspice-config {input.auspice_config} \
            --lat-longs {input.lat_longs} \
            --output {output.auspice_json} \
            --metadata-id-columns accession \
            --metadata {input.metadata}
        """


rule deploy:
    input:
        "auspice/nipah_all.json",
        "auspice/nipah_all_root-sequence.json",
    shell:
        """
        nextstrain remote upload nextstrain.org/groups/neherlab/staging/nipah {input} 2>&1
        """
